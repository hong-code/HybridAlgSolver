(set-logic QF_S)
(declare-const x String)
(assert (str.in.re x (re.inter  (re.++ (re.+  (re.union  (re.++  (str.to.re "\u{21}") (re.+  (str.to.re "\u{3d}") ))  (re.++  (str.to_re "\u{0A}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}")  (str.to.re "\u{21}"))))))))))))))))))))))))))) ) (re.+  (re.union  (re.++  (str.to.re "\u{21}") (re.+  (str.to.re "\u{3d}") ))  (re.++  (str.to_re "\u{0A}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.+ (re.comp  (re.union  (str.to.re "\u{21}")  (str.to.re "\u{3d}"))) ))))))))))))))))))))))))))) )) (re.+  (re.union  (re.++  (str.to.re "\u{21}") (re.+  (str.to.re "\u{3d}") ))  (re.++  (str.to_re "\u{0A}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}") (re.++  (str.to.re "\u{20}")  (str.to.re "\u{21}"))))))))))))))))))))))))))) )  (re.++  (str.to.re "\u{0a}") (re.* (re.union (re.range "\u{00}" "\u{09}") (re.range "\u{0b}" "\u{0c}") (re.range "\u{0e}" "\u{84}") (re.range "\u{86}" "\u{ff}")) )) )))
(check-sat)
(get-model)