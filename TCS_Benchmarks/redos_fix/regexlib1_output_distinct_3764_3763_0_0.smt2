(set-logic QF_S)
(declare-const x String)
(assert (str.in.re x (re.inter  (re.++ (re.+  (re.union  (re.++  (str.to.re "\u{67}") (re.++  (str.to.re "\u{64}")  (str.to.re "\u{62}"))) (re.union  (re.++  (str.to.re "\u{73}") (re.++  (str.to.re "\u{64}")  (str.to.re "\u{65}")))  (re.++  (str.to.re "\u{6d}") (re.++  (str.to.re "\u{64}")  (str.to.re "\u{62}"))))) ) (re.+  (re.union  (re.++  (str.to.re "\u{67}") (re.++  (str.to.re "\u{64}")  (str.to.re "\u{62}"))) (re.union  (re.++  (str.to.re "\u{73}") (re.++  (str.to.re "\u{64}")  (str.to.re "\u{65}")))  (re.++  (str.to.re "\u{6d}") (re.++  (str.to.re "\u{64}")  (str.to.re "\u{66}"))))) )) (re.+  (re.union  (re.++  (str.to.re "\u{67}") (re.++  (str.to.re "\u{64}")  (str.to.re "\u{62}"))) (re.union  (re.++  (str.to.re "\u{73}") (re.++  (str.to.re "\u{64}")  (str.to.re "\u{65}")))  (re.++  (str.to.re "\u{6d}") (re.++  (str.to.re "\u{64}")  (str.to.re "\u{62}"))))) )  (re.++  (str.to.re "\u{6d}") (re.* (re.union (re.range "\u{00}" "\u{09}") (re.range "\u{0b}" "\u{0c}") (re.range "\u{0e}" "\u{84}") (re.range "\u{86}" "\u{ff}")) )) )))
(check-sat)
(get-model)